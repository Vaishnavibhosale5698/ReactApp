{"ast":null,"code":"var _jsxFileName = \"/Users/bridgelabz/Vaishnavi/ReactApp/reactapp/src/Component/NotesContainer.jsx\";\nimport React, { Component } from 'react';\nimport NoteComponent from './NoteComponent';\nimport EditNoteComponent from './EditNoteComponent';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Masonry from 'react-masonry-component';\nimport Note from './Note';\nimport NoteDataManager from '../NoteDataManager';\nvar userNotes = new NoteDataManager();\nconst masonryOptions = {\n  transitionDuration: 0\n};\n\nclass NotesContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.openAddNoteView = () => {\n      console.log('inside open method');\n\n      if (!this.state.toggleNoteView) {\n        this.setState({\n          toggleNoteView: !this.state.toggleNoteView\n        });\n      }\n    };\n\n    this.closeAddNoteView = async (note, title) => {\n      console.log('CLOSEEEEEEE');\n\n      if (this.state.toggleNoteView) {\n        await this.setState({\n          toggleNoteView: !this.state.toggleNoteView,\n          title: title,\n          note: note\n        });\n      } //console.log('on close note and title',title,this.state.note)\n\n    };\n\n    this.state = {\n      toggleNoteView: false,\n      note: '',\n      title: '',\n      notes: ''\n    };\n  }\n\n  componentDidMount() {\n    // firebase.database.database().ref('Notes').on('value', function (snapshot) {\n    //     var userObject = snapshot.val()\n    //     //userObj.push(userObject)\n    //     console.log('all Notes from database',userObject)\n    //   })\n    userNotes.userNotes(async response => {\n      console.log('Response in Datalayer', response);\n      await this.setState({\n        notes: response\n      });\n    });\n    console.log('12345', this.state.notes);\n  }\n\n  render() {\n    console.log('notes object', this.state.notes);\n    return React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        height: '30vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(ClickAwayListener, {\n      onClickAway: this.closeAddNoteView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: this.state.toggleNoteView === false ? {\n        width: '100%'\n      } : {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(NoteComponent, {\n      openAddNoteView: this.openAddNoteView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: this.state.toggleNoteView === true ? {\n        width: '100%'\n      } : {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(EditNoteComponent, {\n      closeAddNoteView: this.closeAddNoteView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })))), React.createElement(Masonry, {\n      style: {\n        marginLeft: '12.5%',\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        maxWidth: '75%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, Object.getOwnPropertyNames(this.state.notes).map((key, index) => React.createElement(Note, {\n      title: this.state.notes[key].title,\n      note: this.state.notes[key].note,\n      listGridValue: this.props.listGridValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default NotesContainer;","map":{"version":3,"sources":["/Users/bridgelabz/Vaishnavi/ReactApp/reactapp/src/Component/NotesContainer.jsx"],"names":["React","Component","NoteComponent","EditNoteComponent","ClickAwayListener","Masonry","Note","NoteDataManager","userNotes","masonryOptions","transitionDuration","NotesContainer","constructor","props","openAddNoteView","console","log","state","toggleNoteView","setState","closeAddNoteView","note","title","notes","componentDidMount","response","render","width","height","display","marginLeft","flexDirection","flexWrap","maxWidth","Object","getOwnPropertyNames","map","key","index","listGridValue"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport NoteComponent from './NoteComponent'\nimport EditNoteComponent from './EditNoteComponent'\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Masonry from 'react-masonry-component';\nimport Note from './Note';\nimport NoteDataManager from '../NoteDataManager'\n\nvar userNotes = new NoteDataManager\n\nconst masonryOptions = {\n    transitionDuration: 0\n};\n\nclass NotesContainer extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            toggleNoteView: false,\n            note: '',\n            title: '',\n            notes: ''\n        }\n    }\n\n    openAddNoteView = () => {\n        console.log('inside open method')\n        if (!this.state.toggleNoteView) {\n            this.setState({\n                toggleNoteView: !this.state.toggleNoteView\n            })\n        }\n    }\n\n    closeAddNoteView = async (note, title) => {\n        console.log('CLOSEEEEEEE')\n        if (this.state.toggleNoteView) {\n            await this.setState({\n                toggleNoteView: !this.state.toggleNoteView,\n                title: title,\n                note: note\n            })\n        }\n\n        //console.log('on close note and title',title,this.state.note)\n    }\n\n\n     componentDidMount() {\n        // firebase.database.database().ref('Notes').on('value', function (snapshot) {\n        //     var userObject = snapshot.val()\n        //     //userObj.push(userObject)\n        //     console.log('all Notes from database',userObject)\n        //   })\n\n         userNotes.userNotes(async(response) => {\n            console.log('Response in Datalayer', response)\n          await  this.setState({\n                notes: response\n            })\n        })\n\n        console.log('12345',this.state.notes)\n    }\n\n    render() {\n        console.log('notes object',this.state.notes)\n        return (\n            <div style = {{ width: '100%' , height: '30vh'}}>\n\n                <ClickAwayListener onClickAway={this.closeAddNoteView}>\n                    <div>\n                        <div style={this.state.toggleNoteView === false ? { width: '100%' } : { display: 'none' }}>\n                            <NoteComponent openAddNoteView={this.openAddNoteView} />\n                        </div>\n\n\n                        <div style={this.state.toggleNoteView === true ? { width: '100%' } : { display: 'none' }}>\n                            <EditNoteComponent closeAddNoteView={this.closeAddNoteView} />\n                        </div>\n                    </div>\n                </ClickAwayListener>\n\n                \n                    <Masonry style = {{marginLeft : '12.5%' ,display : 'flex',flexDirection: 'row', flexWrap: 'wrap', maxWidth : '75%' }}>\n                    {\n                        Object.getOwnPropertyNames(this.state.notes).map((key, index) => (\n                            \n                                    <Note \n                                     title={this.state.notes[key].title} \n                                     note={this.state.notes[key].note}\n                                     listGridValue = {this.props.listGridValue}\n                                    />                          \n                        )\n                        )\n    }\n                    </Masonry>\n   \n            </div>\n        );\n    }\n}\n\nexport default NotesContainer;\n"]},"metadata":{},"sourceType":"module"}